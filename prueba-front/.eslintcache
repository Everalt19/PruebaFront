[{"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\App.js":"1","C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\index.js":"2","C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\TodoList.js":"3","C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\Todo.js":"4","C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\TodoForm.js":"5"},{"size":214,"mtime":1607187623555,"results":"6","hashOfConfig":"7"},{"size":271,"mtime":1607186712175,"results":"8","hashOfConfig":"7"},{"size":1211,"mtime":1607195919238,"results":"9","hashOfConfig":"7"},{"size":1268,"mtime":1607202622150,"results":"10","hashOfConfig":"7"},{"size":2155,"mtime":1607205932513,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13em6ah",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\App.js",[],"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\index.js",[],["24","25"],"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\TodoList.js",[],"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\Todo.js",[],"C:\\Users\\Administrador del PC\\Desktop\\PruebaFrontend\\prueba-front\\src\\components\\TodoForm.js",["26","27","28"],"import React, { useState, useEffect, useRef } from 'react';\n\nfunction TodoForm(props) {\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\n // const [input2, setInput2] = useState(props.edit ? props.edit.value : ''); \n \n  const inputRef = useRef();\n\n\n  //useEffect(() => {\n  //inputRef.current.focus();\n  //});\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  {/* \n  const handleChange2 = e => {\n    setInput2(e.target.value);\n  };\n*/}\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput('');\n  };\n\n  {/*\n  const handleSubmit2 = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input2\n    });\n    setInput2('');\n  };\n\n*/}\n\n  return (\n    <form onSubmit={handleSubmit} className='todo-form'>\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Ingrese la edicion'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input edit'\n          />\n          <button onClick={handleSubmit} className='todo-button edit'>\n            Editar\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            placeholder='Ingrese una tarea'\n            value={input}\n            onChange={handleChange}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit} className='todo-button'>\n             Agregar\n          </button>\n         \n         {/*\n          <br></br>\n          <br></br>\n          <input\n            placeholder='Ingrese numero de tareas aleatorias'\n            value={input2}\n            onChange={handleChange2}\n            name='text'\n            className='todo-input'\n            ref={inputRef}\n          />\n          <button onClick={handleSubmit2} className='todo-button'>\n             Agregar\n          </button>\n         */}\n         \n        </>\n      )}\n    </form>\n    \n\n    \n\n  );\n\n \n}\n\n\n\nexport default TodoForm;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":1,"column":27,"nodeType":"35","messageId":"36","endLine":1,"endColumn":36},{"ruleId":"37","severity":1,"message":"38","line":17,"column":3,"nodeType":"39","messageId":"40","endLine":21,"endColumn":4},{"ruleId":"37","severity":1,"message":"38","line":32,"column":3,"nodeType":"39","messageId":"40","endLine":42,"endColumn":4},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]